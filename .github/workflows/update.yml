on: 
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: '0 */12 * * *'

name: Update data
jobs:
  vaccination:
    name: Vaccinations
    runs-on: ubuntu-latest
    steps:
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - name: Checkout 🛎️
      uses: actions/checkout@master
    - name: Cache vaccination
      uses: actions/cache@v2
      with:
        path: ./
        key: vaccination
    - name: Install Dependencies 🔧🟢
      run: yarn
    - name: ⬆️💉
      # env:
      #   USER_AGENT: ${{ secrets.USER_AGENT }}
      run: yarn vaccination 
  # vslack: 
  #   name: Send Vaccinations to Slack
  #   needs: [ vaccination ]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Setup Node
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 'lts/*'
  #   - name: Checkout 🛎️
  #     uses: actions/checkout@master
  #   - name: Cache vaccination
  #     uses: actions/cache@v2
  #     with:
  #       path: ./
  #       key: vaccination
    - name: Read ./latest/vaccination/counter/today.json
      id: vaccination
      uses: juliangruber/read-file-action@v1
      with:
        path: ./latest/vaccination/counter/today.json
    - name: Echo ./latest/vaccination/counter/today.json
      run: echo "${{ steps.vaccination.outputs.content }}"
    - name: Send message to Slack API
      uses: corcc/slack-send@v2.0.0
      id: notify
      with:
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN_VACCINATION }}
        slack-channel: ${{ secrets.SLACK_CHANNEL_VACCINATION_DAILY }}
        slack-text: "```${{ steps.vaccination.outputs.content }}```"
    - name: Result from "Send Message"
      run: echo "The result was ${{ steps.notify.outputs.slack-result }}"
  # vpublish:
  #   name: Upload Vaccinations
  #   needs: [ vaccination ]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Setup Node
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 'lts/*'
  #   - name: Checkout 🛎️
  #     uses: actions/checkout@master
  #   - name: Cache vaccination
  #     uses: actions/cache@v2
  #     with:
  #       path: ./
  #       key: vaccination
    - uses: corcc/publish@master
      if: github.event.action != 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        TASK_NAME: '⬆️💉'
        TIMEZONE: 'Asia/Tokyo'
# continued
  case:
    name: Cases
    runs-on: ubuntu-latest
    steps:
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - name: Checkout 🛎️
      uses: actions/checkout@master
    - name: Cache case
      uses: actions/cache@v2
      with:
        path: ./
        key: case
    - name: Install Dependencies 🔧🟢
      run: yarn
    - name: ⬆️🦠
      # env:
      #   USER_AGENT: ${{ secrets.USER_AGENT }}
      run: yarn case 
  # cslack: 
  #   name: Send Cases to Slack
  #   needs: [ case ]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Setup Node
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 'lts/*'
  #   - name: Checkout 🛎️
  #     uses: actions/checkout@master
  #   - name: Cache case
  #     uses: actions/cache@v2
  #     with:
  #       path: ./
  #       key: case
    - name: Read ./latest/case/counter.json
      id: case
      uses: juliangruber/read-file-action@v1
      with:
        path: ./latest/case/counter.json
    - name: Echo ./latest/case/counter.json
      run: echo "${{ steps.case.outputs.content }}"
    - name: Send message to Slack API
      uses: corcc/slack-send@v2.0.0
      id: notify
      with:
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN_CONFIRMED_CASE }}
        slack-channel: ${{ secrets.SLACK_CHANNEL_CONFIRMED_CASE_TODAY }}
        slack-text: "```${{ steps.case.outputs.content }}```"
    - name: Result from "Send Message"
      run: echo "The result was ${{ steps.notify.outputs.slack-result }}"
  # cpublish:
  #   name: Upload Cases 
  #   needs: [ case ]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Setup Node
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 'lts/*'
  #   - name: Checkout 🛎️
  #     uses: actions/checkout@master
  #   - name: Cache case
  #     uses: actions/cache@v2
  #     with:
  #       path: ./
  #       key: case
    - uses: corcc/publish@master
      if: github.event.action != 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        TASK_NAME: '⬆️🦠'
        TIMEZONE: 'Asia/Tokyo'
