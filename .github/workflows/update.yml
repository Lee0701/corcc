on: 
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

name: Update
jobs:
  node-dep:
    name: üîß‚¨ÜÔ∏è‚öôÔ∏èüü¢
    runs-on: ubuntu-latest
    steps:
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@master
    - name: Package-Lock ‚öôÔ∏èüü¢
      run: npm install --package-lock-only 
    - name: Cache node_modules üîß‚öôÔ∏èüü¢
      uses: actions/cache@v2
      id: cache-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json')}}
    - name: Install Dependencies üîßüü¢
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: npm install
    - name: Publish package-lock.json ‚¨ÜÔ∏è‚öôÔ∏èüü¢
      uses: corcc/publish@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        TASK_NAME: 'üîß‚¨ÜÔ∏è‚öôÔ∏èüü¢'
        TIMEZONE: 'Asia/Tokyo'
  tsc:
    name: Compile TypeScript with tsc
    needs: [node-dep]
    runs-on: ubuntu-latest
    steps:
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@master
    - name: Cache node_modules üîß‚öôÔ∏èüü¢
      uses: actions/cache@v2
      id: cache-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json')}}
    - name: Cache Build Files
      uses: actions/cache@v2
      id: cache-build
      with:
        path: js
        key: ${{ runner.os }}-js-${{ hashFiles('package-lock.json')}}
    - name: Compile TypeScript
      run: |
        npm run tsc
      
  vaccination:
    name: ‚¨ÜÔ∏èüíâ
    needs: [node-dep,tsc]
    runs-on: ubuntu-latest
    steps:
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@master
    - name: Cache node_modules üîß‚öôÔ∏èüü¢
      uses: actions/cache@v2
      id: cache-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json')}}
    - name: Cache Build Files
      uses: actions/cache@v2
      id: cache-build
      with:
        path: js
        key: ${{ runner.os }}-js-${{ hashFiles('package-lock.json')}}
    - name: ‚¨ÜÔ∏èüíâ
      env:
        USER_AGENT: ${{ secrets.USER_AGENT }}
      run: |
        echo "USER_AGENT=${{ secrets.USER_AGENT }}" >> .env
        npm run vaccination 
    - uses: corcc/publish@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        TASK_NAME: '‚¨ÜÔ∏èüíâ'
        TIMEZONE: 'Asia/Tokyo'
# continued
  case:
    name: ‚¨ÜÔ∏èü¶†
    needs: [node-dep,tsc]
    runs-on: ubuntu-latest
    steps:
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@master
    - name: Cache node_modules üîß‚öôÔ∏èüü¢
      uses: actions/cache@v2
      id: cache-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json')}}
    - name: Cache Build Files
      uses: actions/cache@v2
      id: cache-build
      with:
        path: js
        key: ${{ runner.os }}-js-${{ hashFiles('package-lock.json')}}
    - name: ‚¨ÜÔ∏èü¶†
      env:
        USER_AGENT: ${{ secrets.USER_AGENT }}
      run: |
        echo "USER_AGENT=${{ secrets.USER_AGENT }}" >> .env
        npm run case 
    - uses: corcc/publish@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        TASK_NAME: '‚¨ÜÔ∏èü¶†'
        TIMEZONE: 'Asia/Tokyo'
