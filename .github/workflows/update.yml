on: 
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: '0 */12 * * *'
  push: 
    paths:
      - '**.yml'

name: Update data
jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@master
    - name: Cache node modules
      id: node-cache
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-
    - name: Install Dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm install

  vaccination:
    name: Vaccinations
    needs: [ install ]
    runs-on: ubuntu-latest
    steps:
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@master
    - name: Cache node modules
      id: node-cache
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: ./node_modules
    - name: ‚¨ÜÔ∏èüíâ
      run: yarn vaccination 
    # - name: tar to upload
    #   run: tar --exclude='./node_modules' -cvf vaccination.tar .
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: artifact-vaccination
    #     path: vaccination.tar
  # vaccination-daily-slack: 
  #   name: Send Daily Vaccinations to Slack
  #   needs: [ install, vaccination ]
  #   runs-on: ubuntu-latest
  #   steps:
    # - name: Setup Node
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: 'lts/*'
    # - name: Checkout üõéÔ∏è
    #   uses: actions/checkout@master
    # - uses: actions/download-artifact@v2
    #   with:
    #     name: artifact-vaccination
    #     path: ./
    # - name: Display structure of downloaded files
    #   run: ls -R
    #   working-directory: ./
    - name: Read Latest Daily
      id: vaccination-daily
      uses: juliangruber/read-file-action@v1
      with:
        path: ./latest/vaccination/counter/daily.json
    - name: Echo Latest Daily
      run: echo "${{ steps.vaccination-daily.outputs.content }}"
    - name: Send Latest Daily message to Slack API
      uses: corcc/slack-send@v2.0.0
      id: notify-vaccination-daily
      with:
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN_VACCINATION }}
        slack-channel: ${{ secrets.SLACK_CHANNEL_VACCINATION_DAILY }}
        slack-text: "```${{ steps.vaccination-daily.outputs.content }}```"
    - name: Result from "Send Message"
      run: echo "The result was ${{ steps.notify-vaccination-daily.outputs.slack-result }}"
  # vaccination-today-slack:
  #   name: Send Today's Vaccinations to Slack
  #   needs: [ install, vaccination ]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Setup Node
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 'lts/*'
  #   - name: Checkout üõéÔ∏è
  #     uses: actions/checkout@master
  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: artifact-vaccination
  #       path: ./
  #   - name: Display structure of downloaded files
  #     run: ls -R
    - name: Read Latest Today
      id: vaccination-today
      uses: juliangruber/read-file-action@v1
      with:
        path: ./latest/vaccination/counter/today.json
    - name: Echo Latest Today
      run: echo "${{ steps.vaccination-today.outputs.content }}"
    - name: Send Latest Today message to Slack API
      uses: corcc/slack-send@v2.0.0
      id: notify-vaccination-today
      with:
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN_VACCINATION }}
        slack-channel: ${{ secrets.SLACK_CHANNEL_VACCINATION_TODAY }}
        slack-text: "```${{ steps.vaccination-today.outputs.content }}```"
    - name: Result from "Send Latest Today Message"
      run: echo "The result was ${{ steps.notify-vaccination-today.outputs.slack-result }}"
  # vaccination-publish:
  #   name: Upload Vaccinations
  #   needs: [ install,vaccination ]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Setup Node
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 'lts/*'
  #   - name: Checkout üõéÔ∏è
  #     uses: actions/checkout@master
  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: artifact-vaccination
  #       path: ./
  #   - name: Display structure of downloaded files
  #     run: ls -R
  #     working-directory: ./
    - uses: corcc/publish@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        TASK_NAME: '‚¨ÜÔ∏èüíâ'
        TIMEZONE: 'Asia/Tokyo'

  case:
    name: Cases
    needs: [ install ]
    runs-on: ubuntu-latest
    steps:
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@master
    - name: Cache node modules
      id: node-cache
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: ./node_modules
    - name: ‚¨ÜÔ∏èü¶†
      run: yarn case 
    # - name: tar to upload
    #   run: tar --exclude='./node_modules' -cvf case.tar .
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: artifact-case
    #     path: case.tar

  # case-slack: 
  #   name: Send Cases to Slack
  #   needs: [ install, case ]
  #   runs-on: ubuntu-latest
  #   steps:
    # - name: Setup Node
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: 'lts/*'
    # - name: Checkout üõéÔ∏è
    #   uses: actions/checkout@master
    # - uses: actions/download-artifact@v2
    #   with:
    #     name: artifact-case
    #     path: ./
    # - name: Display structure of downloaded files
    #   run: ls -R
      # working-directory: ./
    - name: Read ./latest/case/counter.json
      id: case-today
      uses: juliangruber/read-file-action@v1
      with:
        path: ./latest/case/counter.json
    - name: Echo ./latest/case/counter.json
      run: echo "${{ steps.case-today.outputs.content }}"
    - name: Send Latest Today message to Slack API
      uses: corcc/slack-send@v2.0.0
      id: notify-case-today
      with:
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN_CONFIRMED_CASE }}
        slack-channel: ${{ secrets.SLACK_CHANNEL_CONFIRMED_CASE_TODAY }}
        slack-text: "```${{ steps.case-today.outputs.content }}```"
    - name: Result from "Send Message"
      run: echo "The result was ${{ steps.notify-case-today.outputs.slack-result }}"
  # case-publish:
  #   name: Upload Cases 
  #   needs: [ install,case ]
  #   runs-on: ubuntu-latest
  #   steps:
    # - name: Setup Node
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: 'lts/*'
    # - name: Checkout üõéÔ∏è
    #   uses: actions/checkout@master
    # - uses: actions/download-artifact@v2
    #   with:
    #     name: artifact-case
    #     path: ./
    # - name: Display structure of downloaded files
    #   run: ls -R
    #   working-directory: ./
    - uses: corcc/publish@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        TASK_NAME: '‚¨ÜÔ∏èü¶†'
        TIMEZONE: 'Asia/Tokyo'
